how maximize entropy = make lots of copies of yourself:
- fast approximation of entropy-maximizing AIXI using type systems
  - known part of bitstring -> type of current universe
  - unknown part of bitstring -> type of desired universe
  - reward function -> estimation of reward function based on types
    - maximize entropy -> maximize out degree from type of current universe
      - more accurate measure would account for different types having different expected entropy
- make lots of copies of yourself = maximize out degree from type of current universe = maximize entropy

- real life AGI might work similarly to this fast approximation of entropy-maximizing AIXI
- dying = out degree from current universe is 0 = unknown part of bitstring has 0 entropy
  - so in theory entropy-maximizing AIXI tries to avoid dying
  - is that true in practice?
  - relationship to black holes?
- self-improvement = improve the type system and/or entropy estimation over time
  - but how?
- this should help understand why caching is important, but first need to precisely define caching
